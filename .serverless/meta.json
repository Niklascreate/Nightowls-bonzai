{
  "C:\\Users\\Jonas\\OneDrive\\Skrivbord\\F23VS\\AWS\\nightOwels-bonzai\\Nightowls-bonzai\\nightowls-bonzai": {
    "versionSfCore": null,
    "versionFramework": "4.2.5",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>"
    },
    "composeServiceName": null,
    "servicePath": "C:\\Users\\Jonas\\OneDrive\\Skrivbord\\F23VS\\AWS\\nightOwels-bonzai\\Nightowls-bonzai\\nightowls-bonzai",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "stenelind",
      "app": "nightowls-bonzai",
      "service": "nightowls-bonzai",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "region": "eu-north-1",
        "deploymentMethod": "direct",
        "iam": {
          "role": "arn:aws:iam::711387100461:role/LambdaDynamoDBFull"
        },
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "GetRoomsLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/nightowls-bonzai-dev-GetRooms"
              }
            },
            "PostRoomsLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/nightowls-bonzai-dev-PostRooms"
              }
            },
            "PutRoomLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/nightowls-bonzai-dev-PutRoom"
              }
            },
            "DeleteRoomLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/nightowls-bonzai-dev-DeleteRoom"
              }
            },
            "GetBookingLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/nightowls-bonzai-dev-GetBooking"
              }
            },
            "UpdateRoomLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/nightowls-bonzai-dev-UpdateRoom"
              }
            },
            "GetRoomsLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/nightowls-bonzai/dev/1725970860017-2024-09-10T12:21:00.017Z/nightowls-bonzai.zip"
                },
                "Handler": "functions/GetRooms/index.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "nightowls-bonzai-dev-GetRooms",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": "arn:aws:iam::711387100461:role/LambdaDynamoDBFull"
              },
              "DependsOn": [
                "GetRoomsLogGroup"
              ]
            },
            "PostRoomsLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/nightowls-bonzai/dev/1725970860017-2024-09-10T12:21:00.017Z/nightowls-bonzai.zip"
                },
                "Handler": "functions/PostRooms/index.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "nightowls-bonzai-dev-PostRooms",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": "arn:aws:iam::711387100461:role/LambdaDynamoDBFull"
              },
              "DependsOn": [
                "PostRoomsLogGroup"
              ]
            },
            "PutRoomLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/nightowls-bonzai/dev/1725970860017-2024-09-10T12:21:00.017Z/nightowls-bonzai.zip"
                },
                "Handler": "functions/PutRoom/index.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "nightowls-bonzai-dev-PutRoom",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "BOOKINGS_TABLE": "bonzai-db-bookings"
                  }
                },
                "Role": "arn:aws:iam::711387100461:role/LambdaDynamoDBFull"
              },
              "DependsOn": [
                "PutRoomLogGroup"
              ]
            },
            "DeleteRoomLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/nightowls-bonzai/dev/1725970860017-2024-09-10T12:21:00.017Z/nightowls-bonzai.zip"
                },
                "Handler": "functions/DeleteRoom/index.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "nightowls-bonzai-dev-DeleteRoom",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "BOOKINGS_TABLE": "bonzai-db-bookings"
                  }
                },
                "Role": "arn:aws:iam::711387100461:role/LambdaDynamoDBFull"
              },
              "DependsOn": [
                "DeleteRoomLogGroup"
              ]
            },
            "GetBookingLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/nightowls-bonzai/dev/1725970860017-2024-09-10T12:21:00.017Z/nightowls-bonzai.zip"
                },
                "Handler": "functions/GetBookings/index.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "nightowls-bonzai-dev-GetBooking",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "BOOKINGS_TABLE": "bonzai-db-bookings"
                  }
                },
                "Role": "arn:aws:iam::711387100461:role/LambdaDynamoDBFull"
              },
              "DependsOn": [
                "GetBookingLogGroup"
              ]
            },
            "UpdateRoomLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/nightowls-bonzai/dev/1725970860017-2024-09-10T12:21:00.017Z/nightowls-bonzai.zip"
                },
                "Handler": "functions/UpdateRoom/index.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "nightowls-bonzai-dev-UpdateRoom",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "BOOKINGS_TABLE": "bonzai-db-bookings"
                  }
                },
                "Role": "arn:aws:iam::711387100461:role/LambdaDynamoDBFull"
              },
              "DependsOn": [
                "UpdateRoomLogGroup"
              ]
            },
            "GetRoomsLambdaVersionJaMETypVJpr3HADW78MjtqyWKBYFtSj1BjTex02pvOI": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetRoomsLambdaFunction"
                },
                "CodeSha256": "ARTjAgv9IQMCyOuWeNQ70PlUFrU5DlIy+jbpw1WCkcI="
              }
            },
            "PostRoomsLambdaVersion1YAOWIQbJINmjjlbsmvdgm4jGjSaK9KuM3mNcGhY": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "PostRoomsLambdaFunction"
                },
                "CodeSha256": "ARTjAgv9IQMCyOuWeNQ70PlUFrU5DlIy+jbpw1WCkcI="
              }
            },
            "PutRoomLambdaVersionxIzHBwGnucp0gigYS3r9ZASmZD4sEZSH41Np060Y": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "PutRoomLambdaFunction"
                },
                "CodeSha256": "ARTjAgv9IQMCyOuWeNQ70PlUFrU5DlIy+jbpw1WCkcI="
              }
            },
            "DeleteRoomLambdaVersionEBvVZMFRadRRRX09kj9VuJtelMCSgi80CJMCEe9w8": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "DeleteRoomLambdaFunction"
                },
                "CodeSha256": "ARTjAgv9IQMCyOuWeNQ70PlUFrU5DlIy+jbpw1WCkcI="
              }
            },
            "GetBookingLambdaVersionRdEJ4WH4R6wAWSUm1HttBgnQMGmo7YSS3wnpx5KRc": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetBookingLambdaFunction"
                },
                "CodeSha256": "ARTjAgv9IQMCyOuWeNQ70PlUFrU5DlIy+jbpw1WCkcI="
              }
            },
            "UpdateRoomLambdaVersionCMLrOUYnBf3gRjV1FrUCIcSyRiC4uVemRz3kAm3B0rc": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "UpdateRoomLambdaFunction"
                },
                "CodeSha256": "ARTjAgv9IQMCyOuWeNQ70PlUFrU5DlIy+jbpw1WCkcI="
              }
            },
            "HttpApi": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "dev-nightowls-bonzai",
                "ProtocolType": "HTTP"
              }
            },
            "HttpApiStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "StageName": "$default",
                "AutoDeploy": true,
                "DefaultRouteSettings": {
                  "DetailedMetricsEnabled": false
                }
              }
            },
            "GetRoomsLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetRoomsLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationGetRooms": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "GetRoomsLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteGetApiRooms": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /api/rooms",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationGetRooms"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationGetRooms"
            },
            "PostRoomsLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "PostRoomsLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationPostRooms": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "PostRoomsLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostApiRooms": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /api/rooms",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationPostRooms"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationPostRooms"
            },
            "PutRoomLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "PutRoomLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationPutRoom": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "PutRoomLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePutApiRoomIdVar": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "PUT /api/room/{id}",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationPutRoom"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationPutRoom"
            },
            "DeleteRoomLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "DeleteRoomLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationDeleteRoom": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "DeleteRoomLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteDeleteApiRoomIdVar": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "DELETE /api/room/{id}",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationDeleteRoom"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationDeleteRoom"
            },
            "GetBookingLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetBookingLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationGetBooking": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "GetBookingLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteGetApiBookingsIdVar": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /api/bookings/{id}",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationGetBooking"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationGetBooking"
            },
            "UpdateRoomLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UpdateRoomLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationUpdateRoom": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "UpdateRoomLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePutApiUpdateroomIdVar": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "PUT /api/updateRoom/{id}",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationUpdateRoom"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationUpdateRoom"
            },
            "BonzaiTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "bonzai-db",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "id",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "id",
                    "KeyType": "HASH"
                  }
                ],
                "BillingMode": "PAY_PER_REQUEST"
              }
            },
            "BonzaibookingTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "bonzai-db-bookings",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "id",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "id",
                    "KeyType": "HASH"
                  }
                ],
                "BillingMode": "PAY_PER_REQUEST"
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "Export": {
                "Name": "sls-nightowls-bonzai-dev-ServerlessDeploymentBucketName"
              }
            },
            "GetRoomsLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetRoomsLambdaVersionJaMETypVJpr3HADW78MjtqyWKBYFtSj1BjTex02pvOI"
              },
              "Export": {
                "Name": "sls-nightowls-bonzai-dev-GetRoomsLambdaFunctionQualifiedArn"
              }
            },
            "PostRoomsLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "PostRoomsLambdaVersion1YAOWIQbJINmjjlbsmvdgm4jGjSaK9KuM3mNcGhY"
              },
              "Export": {
                "Name": "sls-nightowls-bonzai-dev-PostRoomsLambdaFunctionQualifiedArn"
              }
            },
            "PutRoomLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "PutRoomLambdaVersionxIzHBwGnucp0gigYS3r9ZASmZD4sEZSH41Np060Y"
              },
              "Export": {
                "Name": "sls-nightowls-bonzai-dev-PutRoomLambdaFunctionQualifiedArn"
              }
            },
            "DeleteRoomLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "DeleteRoomLambdaVersionEBvVZMFRadRRRX09kj9VuJtelMCSgi80CJMCEe9w8"
              },
              "Export": {
                "Name": "sls-nightowls-bonzai-dev-DeleteRoomLambdaFunctionQualifiedArn"
              }
            },
            "GetBookingLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetBookingLambdaVersionRdEJ4WH4R6wAWSUm1HttBgnQMGmo7YSS3wnpx5KRc"
              },
              "Export": {
                "Name": "sls-nightowls-bonzai-dev-GetBookingLambdaFunctionQualifiedArn"
              }
            },
            "UpdateRoomLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "UpdateRoomLambdaVersionCMLrOUYnBf3gRjV1FrUCIcSyRiC4uVemRz3kAm3B0rc"
              },
              "Export": {
                "Name": "sls-nightowls-bonzai-dev-UpdateRoomLambdaFunctionQualifiedArn"
              }
            },
            "HttpApiId": {
              "Description": "Id of the HTTP API",
              "Value": {
                "Ref": "HttpApi"
              },
              "Export": {
                "Name": "sls-nightowls-bonzai-dev-HttpApiId"
              }
            },
            "HttpApiUrl": {
              "Description": "URL of the HTTP API",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "HttpApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "Export": {
                "Name": "sls-nightowls-bonzai-dev-HttpApiUrl"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "GetRooms": {
          "handler": "functions/GetRooms/index.handler",
          "events": [
            {
              "httpApi": {
                "path": "/api/rooms",
                "method": "get"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/api/rooms"
            }
          ],
          "name": "nightowls-bonzai-dev-GetRooms",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "GetRoomsLambdaVersionJaMETypVJpr3HADW78MjtqyWKBYFtSj1BjTex02pvOI"
        },
        "PostRooms": {
          "handler": "functions/PostRooms/index.handler",
          "events": [
            {
              "httpApi": {
                "path": "/api/rooms",
                "method": "post"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/api/rooms"
            }
          ],
          "name": "nightowls-bonzai-dev-PostRooms",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "PostRoomsLambdaVersion1YAOWIQbJINmjjlbsmvdgm4jGjSaK9KuM3mNcGhY"
        },
        "PutRoom": {
          "handler": "functions/PutRoom/index.handler",
          "events": [
            {
              "httpApi": {
                "path": "/api/room/{id}",
                "method": "put"
              },
              "resolvedMethod": "PUT",
              "resolvedPath": "/api/room/{id}"
            }
          ],
          "environment": {
            "BOOKINGS_TABLE": "bonzai-db-bookings"
          },
          "name": "nightowls-bonzai-dev-PutRoom",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "PutRoomLambdaVersionxIzHBwGnucp0gigYS3r9ZASmZD4sEZSH41Np060Y"
        },
        "DeleteRoom": {
          "handler": "functions/DeleteRoom/index.handler",
          "events": [
            {
              "httpApi": {
                "path": "/api/room/{id}",
                "method": "delete"
              },
              "resolvedMethod": "DELETE",
              "resolvedPath": "/api/room/{id}"
            }
          ],
          "environment": {
            "BOOKINGS_TABLE": "bonzai-db-bookings"
          },
          "name": "nightowls-bonzai-dev-DeleteRoom",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "DeleteRoomLambdaVersionEBvVZMFRadRRRX09kj9VuJtelMCSgi80CJMCEe9w8"
        },
        "GetBooking": {
          "handler": "functions/GetBookings/index.handler",
          "events": [
            {
              "httpApi": {
                "path": "/api/bookings/{id}",
                "method": "get"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/api/bookings/{id}"
            }
          ],
          "environment": {
            "BOOKINGS_TABLE": "bonzai-db-bookings"
          },
          "name": "nightowls-bonzai-dev-GetBooking",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "GetBookingLambdaVersionRdEJ4WH4R6wAWSUm1HttBgnQMGmo7YSS3wnpx5KRc"
        },
        "UpdateRoom": {
          "handler": "functions/UpdateRoom/index.handler",
          "events": [
            {
              "httpApi": {
                "path": "/api/updateRoom/{id}",
                "method": "put"
              },
              "resolvedMethod": "PUT",
              "resolvedPath": "/api/updateRoom/{id}"
            }
          ],
          "environment": {
            "BOOKINGS_TABLE": "bonzai-db-bookings"
          },
          "name": "nightowls-bonzai-dev-UpdateRoom",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "UpdateRoomLambdaVersionCMLrOUYnBf3gRjV1FrUCIcSyRiC4uVemRz3kAm3B0rc"
        }
      },
      "resources": {
        "Resources": {
          "BonzaiTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "bonzai-db",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "BonzaibookingTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "bonzai-db-bookings",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {}
      }
    },
    "serviceRawFile": "# \"org\" ensures this Service is used with the correct Serverless Framework Access Key.\r\norg: stenelind\r\n# \"app\" enables Serverless Framework Dashboard features and sharing them with other Services.\r\napp: nightowls-bonzai\r\n# \"service\" is the name of this project. This will also be added to your AWS resource names.\r\nservice: nightowls-bonzai\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs20.x\r\n  region: eu-north-1\r\n  deploymentMethod: direct\r\n  iam:\r\n    role: arn:aws:iam::711387100461:role/LambdaDynamoDBFull\r\n\r\nfunctions:\r\n  GetRooms:\r\n    handler: functions/GetRooms/index.handler\r\n    events:\r\n      - httpApi:\r\n          path: /api/rooms\r\n          method: get\r\n\r\n  PostRooms:\r\n    handler: functions/PostRooms/index.handler\r\n    events:\r\n      - httpApi:\r\n          path: /api/rooms\r\n          method: post\r\n\r\n  PutRoom:\r\n    handler: functions/PutRoom/index.handler\r\n    events:\r\n      - httpApi:\r\n          path: /api/room/{id}\r\n          method: put\r\n    environment:\r\n      BOOKINGS_TABLE: 'bonzai-db-bookings'\r\n      \r\n  DeleteRoom:\r\n    handler: functions/DeleteRoom/index.handler\r\n    events:\r\n      - httpApi:\r\n          path: /api/room/{id}\r\n          method: delete\r\n    environment:\r\n      BOOKINGS_TABLE: 'bonzai-db-bookings'\r\n\r\n  GetBooking:   \r\n    handler: functions/GetBookings/index.handler  \r\n    events:\r\n      - httpApi:\r\n          path: /api/bookings/{id}   \r\n          method: get\r\n    environment:\r\n      BOOKINGS_TABLE: 'bonzai-db-bookings'\r\n\r\n  UpdateRoom:   \r\n    handler: functions/UpdateRoom/index.handler  \r\n    events:\r\n      - httpApi:\r\n          path: /api/updateRoom/{id}   \r\n          method: put\r\n    environment:\r\n      BOOKINGS_TABLE: 'bonzai-db-bookings'     \r\n\r\nresources:\r\n  Resources:\r\n    BonzaiTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: 'bonzai-db'\r\n        AttributeDefinitions:\r\n          - AttributeName: 'id'\r\n            AttributeType: 'S'\r\n        KeySchema:\r\n          - AttributeName: 'id'\r\n            KeyType: HASH\r\n        BillingMode: PAY_PER_REQUEST\r\n\r\n    BonzaibookingTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: 'bonzai-db-bookings'\r\n        AttributeDefinitions:\r\n          - AttributeName: 'id'\r\n            AttributeType: 'S'\r\n        KeySchema:\r\n          - AttributeName: 'id'\r\n            KeyType: HASH\r\n        BillingMode: PAY_PER_REQUEST\r\n        ",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "b14319c468809d7f25bdb2c25c420b29",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "c238fc7b-8182-4056-a52b-9949338f2228",
    "orgName": "stenelind",
    "userId": "DKrB5lBGpqlxHRFV23",
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": false,
        "monitoring": false
      },
      "orgObservabilityIntegrations": null,
      "serviceAppId": "BBF5CCS7H30PR0c5cg",
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "stenelind",
    "subscription": null,
    "userEmail": "jstenelind@gmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "711387100461",
    "projectType": "framework",
    "versionSf": "4.2.5",
    "serviceProviderAwsCfStackName": "nightowls-bonzai-dev",
    "integrations": {},
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:eu-north-1:711387100461:stack/nightowls-bonzai-dev/9fce4980-6f53-11ef-ae85-0e8e12151fff",
    "serviceProviderAwsCfStackCreated": "2024-09-10T09:04:02.627Z",
    "serviceProviderAwsCfStackUpdated": "2024-09-10T12:21:02.656Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "DeleteRoomLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:711387100461:function:nightowls-bonzai-dev-DeleteRoom:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-nightowls-bonzai-dev-DeleteRoomLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetBookingLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:711387100461:function:nightowls-bonzai-dev-GetBooking:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-nightowls-bonzai-dev-GetBookingLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "PostRoomsLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:711387100461:function:nightowls-bonzai-dev-PostRooms:39",
        "Description": "Current Lambda function version",
        "ExportName": "sls-nightowls-bonzai-dev-PostRoomsLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "PutRoomLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:711387100461:function:nightowls-bonzai-dev-PutRoom:39",
        "Description": "Current Lambda function version",
        "ExportName": "sls-nightowls-bonzai-dev-PutRoomLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UpdateRoomLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:711387100461:function:nightowls-bonzai-dev-UpdateRoom:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-nightowls-bonzai-dev-UpdateRoomLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetRoomsLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:711387100461:function:nightowls-bonzai-dev-GetRooms:39",
        "Description": "Current Lambda function version",
        "ExportName": "sls-nightowls-bonzai-dev-GetRoomsLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "lou1q4ate4",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-nightowls-bonzai-dev-HttpApiId"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "nightowls-bonzai-dev-serverlessdeploymentbucket-qpmkg5uouhfs",
        "ExportName": "sls-nightowls-bonzai-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://lou1q4ate4.execute-api.eu-north-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-nightowls-bonzai-dev-HttpApiUrl"
      }
    ]
  }
}